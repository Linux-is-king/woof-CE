#
#  persistent configuration options
#
#  see also DISTRO_SPECS DISTRO_PET_REPOS DISTRO_COMPAT_REPOS-*
#
#  **NOTE**: check the original file every once in a while
#            settings might be added or removed...
#

# 2createpackages
STRIP_BINARIES=yes

## Kernel tarballs repo URL for choosing/downloading kernel
KERNEL_REPO_URL=http://distro.ibiblio.org/puppylinux/huge_kernels

## Kernel tarball URL
## avoid being asked questions about downloading/choosing a kernel
#KERNEL_TARBALL_URL=http://distro.ibiblio.org/puppylinux/huge_kernels/huge-3.14.55-slacko_noPAE.tar.bz2

## an array of generically named programs to send to the ADRIVE, FDRIVE, YDRIVE
## ADRV_INC="abiword gnumeric goffice"
ADRV_INC=""
## YDRV_INC=""
YDRV_INC=""
## FDRV_INC="" #this one is very experimental and it's recommended to be left unset
FDRV_INC=""

## Include kernel-kit generated FDRIVE
## set to yes or no or leave commented to be asked the question at build time
#KFDRIVE=no

## build devx? yes/no 
BUILD_DEVX=yes

## include devx SFS in ISO?
DEVX_IN_ISO=yes

## packages to build from source
PETBUILDS="pmaterial_icons puppy_flat_icons puppy_standard_icons palemoon"

## GTK+ version to use when building packages that support GTK+ 2
PETBUILD_GTK=2

## Include the windows puppy installer LICK by Luke Lorimer aka <noryb009>
LICK_IN_ISO=yes

## compression method to be used (SFS files)
SFSCOMP='-comp xz -Xbcj x86 -b 512K'
#SFSCOMP='-comp xz'
#SFSCOMP='-comp gzip'
#SFSCOMP='-noI -noD -noF -noX'

## if "$WOOF_HOSTARCH" = "$WOOF_TARGETARCH"
## This is usually not needed
EXTRA_STRIPPING=yes

## You can choose a theme here if you wish
## otherwise 3builddistro will ask you to choose one
THEME_WALLPAPER="431-dark.svg"
THEME_GTK2="Numix"
THEME_JWM="Numix"
THEME_JWM_BUTTONS="Buntu"
THEME_GTK_ICONS="PMaterial"
THEME_DESK_ICONS="PMaterial"
THEME_MOUSE="Breeze_Snow"

## XERRS_FLG if set to 'yes' enables logging of X errors in /tmp/xerrs.log
## if unset or or any value other than 'yes' X logging is disabled. User can change this in 'Startup Manager'
## For testing builds XERRS_FLG=yes is recommended. If the target device is low RAM suggest to leave this unset, especially for release
XERRS_FLG=yes

## include Pkg in build (y/n). If commented then asked in 3builddistro
INCLUDE_PKG=n

## ucode.cpio initial ram disk with CPU bugfixes
## build the microcode initrd to mitigate aganst cpu bugs like spectre/meltdown
## You can specify 'amd' or 'intel' as args to latest_microcode.sh
## comment out to exclude bulding ucode.cpio
#UCODE_EXEC=../support/latest_microcode.sh amd
#UCODE_EXEC=../support/latest_microcode.sh intel
UCODE_EXEC=../support/latest_microcode.sh

## -- Default Apps --
## Not all are implemented in the puppy scripts,
##   but you can specify a default app if you wish...
## If you specify a value it will override anything that previously
##   set that value in the corresponding script...
## These are the current default*apps (scripts) in /usr/local/bin
DEFAULTAPPS="
defaultarchiver=
defaultaudioeditor=
defaultaudiomixer=
defaultaudioplayer=deadbeef
defaultbrowser=palemoon
defaultcalendar=osmo
defaultcdplayer=deadbeef
defaultcdrecorder=
defaultchat=
defaultchmviewer=
defaultconnect=
defaultcontact=
defaultdraw=
defaultemail=claws-mail
defaultfilemanager=
defaulthandler=
defaulthtmleditor=
defaulthtmlviewer=defaultbrowser
defaultimageeditor=
defaultimageviewer=
defaultmediaplayer=
defaultpaint=
defaultpdfviewer=qpdfview
defaultprocessmanager=
defaultrun=
defaultscreenshot=mntpaint -s
defaultspreadsheet=
defaultterminal=urxvt
defaulttexteditor=geany
defaulttextviewer=
defaulttorrent=
defaultwordprocessor=
"
## - extra commands --
## Here add custom commands to be executed inside sandbox3/rootfs-complete
EXTRA_COMMANDS=""
